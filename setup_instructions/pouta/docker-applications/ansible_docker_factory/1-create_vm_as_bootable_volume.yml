---
# You'll need to download and source your project's Pouta credentials before this will work:
#  https://research.csc.fi/pouta-credentials

# Prerequisites:
#   - your local machine IP must have access to port 22 in the assigned security groups
#   - your local machine has the appropriate private key loaded in an SSH agent, see https://docs.ansible.com/ansible/latest/user_guide/intro_getting_started.html

# Variables to pass to this play (use variables.yml file):
#  - "{{pem_key}}"
#  - "{{sec_groups}}"
#  - "{{vm_name}}"
#  - "{{vm_image}}"
#  - "{{vm_flavor}}"
#  - "{{server_ips}}"
- name: Create VM as bootable volume in cPouta
  hosts: localhost # The OpenStack modules run on your local machine.
  connection: local

  tasks:
    - name: Create a bootable volume
      os_volume:
        state: present
        size: "{{ vol_size }}"
        display_name: "{{ vm_vol_name }}"
        image: "{{ vm_image }}"
    - name: Create a virtual machine
      register: result
      os_server:
        name: "{{ vm_name }}"
        flavor: "{{ vm_flavor }}"
        key_name: "{{ pem_key }}"
        security_groups: "{{ sec_groups }}"
        boot_volume: "{{ vm_vol_name }}"


    # Add your new VM's IP to a temporary hosts group: tmp_group
    - name: Add new host to inventory
      add_host: name={{ result.server.public_v4 }} groups="{{server_ips}}"
      # default "tmp_group" this is a temporary group available only durent the play

    - name: clear ssh known_hosts
      known_hosts: name={{ result.server.public_v4 }} state=absent
      when: result | changed

    - name: Wait for instance to be ready
      wait_for: host={{ result.server.public_v4 }} port=22 search_regex=OpenSSH delay=10

- name: Update Ubuntu 16 virtual machine in cPouta
  hosts: "{{server_ips}}"
  remote_user: cloud-user # this is the default and only user in cPouta CSC's images
  environment:
    ANSIBLE_HOST_KEY_CHECKING: False # so new hosts will be automatically added to the known hosts witouth checking previous keys, see https://docs.ansible.com/ansible/latest/user_guide/intro_getting_started.html
  #become: true # apt update failed ... sudo: yes worked though?
  sudo: yes

  tasks:
    - name: set timezone to Europe/Helsinki
      timezone:
        name: Europe/Helsinki

    - name: Update apt cache
      apt: update_cache=yes

    - name: Install basic tools
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - python-setuptools
        - python-pip
        - git

    - name: Install docker-py
      pip:
        name: docker-py

    - name: Upgrade packages
      apt: upgrade=dist

    - name: Check if a reboot is required
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: restart machine
      become: yes
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      async: 1
      poll: 0
      ignore_errors: true
      when: reboot_required_file.stat.exists == true

    - name: Waiting for server to come back
      become: no
      local_action: wait_for
        port=22
        host={{ inventory_hostname }}
        search_regex=OpenSSH
        delay=10

    - name: Ensure VM's reboot everyday at 3am
      cron:
        name: "Add reboot at 3am"
        minute: "0"
        hour: "3"
        job: "/sbin/reboot"
...
